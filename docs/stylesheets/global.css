/* Define global variables. */
:root {
  --color-blue: #55f;
  --color-cyan: #5ff;
  --color-green: #5f5;
  --color-grey: #616263;
  --color-pink: #f5f;
  --color-red: #f55;
  --color-yellow: #ff5;
  --emoji-margin: 0.25em;
  --task-list-item-margin: 2em;
}

/* Adjust some colors to make them easier to read for light theme users. */
[data-md-color-scheme="default"] {
  --color-cyan: #00c7df;
  --color-green: #4cbd29;
  --color-grey: #b5b5b5;
  --color-yellow: #ffab00;
}

/* Adjust some features of the layout on bigger (i.e. non-mobile) screens. */
@media screen and (min-width: 76.25em) {
  /* Constrain the width of the content area to keep it easy-to-read. */
  .md-content {
    max-width: 800px;
  }
  /* Use bold text for the expandable section headers in the primary nav. */
  .md-nav--primary .md-nav__link--index {
    font-weight: bold;
  }
  /* Slightly increase the size of code text inside non-heading elements. */
  .md-typeset :not(.doc-heading) > code {
    font-size: 0.9em;
  }
  /* Clip scrolling for code in "pre" elements (unnecessary + distracting). */
  .md-typeset pre > code {
    overflow-x: clip;
  }
}

/* Adjust some features of the layout on smaller (i.e. mobile) screens. */
@media screen and (max-width: 76.25em) {
  /* Hide the "Back to top" button that normally appears when scrolling up. */
  .md-top.md-icon {
    display: none;
  }
}

/* Define the "blinking caret" animation. */
@keyframes blink {
  from,
  to {
    color: transparent;
  }
  50% {
    color: var(--md-code-hl-generic-color);
  }
}

/* Append pseudo-element mimicking a blinking caret to opted-in code blocks. */
.ends-with-input code > :last-child > .go::after {
  content: " â–ˆ";
  animation: 1.5s blink 0s step-end infinite;
}

/* Prevent user selection of all code block filenames, as well as console and
   pycon code block ".go" (generic output) and ".gp" (generic prompt). */
.highlight > .filename,
:is(.language-console, .language-pycon) :is(.go, .gp) {
  user-select: none;
}

/* Hide line numbers in console, pycon, and explicitly opted-out code blocks. */
:is(.language-console, .language-pycon, .line-numbers-off) .linenos {
  display: none;
}

/* Hide footer links pointing outside of the current directory. */
a[href="../"].md-footer__link--prev,
a[href^="../../"].md-footer__link {
  display: none;
}

/* Adjust the dimensions and position of annotation "+" buttons in code. */
.annotate code .md-annotation [data-md-annotation-id]:before {
  font-size: 0.64rem;
  padding-bottom: unset;
  transform: unset;
  vertical-align: -0.01rem;
}

/* Adjust the width of annotation tooltips in code. */
.annotate code .md-annotation .md-tooltip {
  width: 16.67rem;
}

/* Make each clickable grid card actually appear clickable. */
.clickable.grid :is(.card, li) :not(a) {
  pointer-events: none;
}
.clickable.grid :is(.card, li):hover {
  cursor: pointer;
}

/* Hide duplicate class descriptions if a class is included multiple times. */
.doc-class ~ .doc-class > .doc-contents > :not(.doc-children) {
  display: none;
}

/* Hide the injected version picker widget - it's irrelevant. */
.rst-versions.rst-badge {
  display: none;
}

/* Add some extra horizontal spacing around emoji so they don't look cramped. */
.twemoji {
  margin: 0 var(--emoji-margin);
}

/* Color all the code/span elements that are tagged with a color class. */
:is(code, span).blue {
  color: var(--color-blue);
}
:is(code, span).cyan {
  color: var(--color-cyan);
}
:is(code, span).green {
  color: var(--color-green);
}
:is(code, span).grey {
  color: var(--color-grey);
}
:is(code, span).pink {
  color: var(--color-pink);
}
:is(code, span).red {
  color: var(--color-red);
}
:is(code, span).yellow {
  color: var(--color-yellow);
}

/* Change the colors assigned to some classes for better syntax highlighting. */
:is(.language-py, .language-pycon, .quote) code :is(.kc, .se) {
  color: var(--md-code-hl-number-color);
}
:is(.language-py, .language-pycon, .quote) code :is(.nc, .ne) {
  color: var(--md-code-hl-special-color);
}
:is(.language-py, .language-pycon, .quote) code .ow {
  color: var(--md-code-hl-keyword-color);
}
:is(.language-py, .language-pycon, .quote) code .sa {
  color: var(--md-code-hl-string-color);
}
:is(.language-py, .language-pycon, .quote) code .si {
  color: var(--md-code-hl-punctuation-color);
}

/* Adjust the sizing and spacing of task list items and their checkboxes. */
[dir="ltr"] .md-typeset .task-list .task-list-item {
  margin-left: var(--task-list-item-margin);
}
[dir="rtl"] .md-typeset .task-list .task-list-item {
  margin-right: var(--task-list-item-margin);
}
[dir="ltr"] .md-typeset .task-list-indicator:before {
  left: calc(-1 * var(--task-list-item-margin));
}
[dir="rtl"] .md-typeset .task-list-indicator:before {
  right: calc(-1 * var(--task-list-item-margin));
}
.md-typeset .task-list-indicator:before {
  -webkit-mask-size: auto;
  mask-size: auto;
}
